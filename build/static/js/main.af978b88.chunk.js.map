{"version":3,"sources":["containers/login.js","containers/email.js","containers/register.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Login","className","to","value","type","name","placeholder","required","href","Component","Email","Register","id","htmlFor","checked","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af978b88.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Login extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"login\">\r\n                        <div className=\"title-bar\">\r\n                            <p>Login</p>\r\n                        </div>\r\n                        <div className=\"form-content\">\r\n                            <p className=\"text-right\"><Link to=\"/email\" className=\"\" value=\"register\">Login with Email</Link></p>\r\n                            <form className=\"form\">\r\n                                    <div className=\"phone\">\r\n                                        <select>\r\n                                            <option>+95</option>\r\n                                            <option>+01</option>\r\n                                            <option>+067</option>\r\n                                        </select>\r\n                                        <input type=\"text\" name=\"\" placeholder=\"Phone No\" required=\"\"/>\r\n                                    </div>\r\n                                    <input type=\"password\" name=\"\" placeholder=\"Password\" required=\"\"/>\r\n                                        <button className=\"btn-com\"><a href=\"dashboard.html\"\r\n                                                                       className=\"cl-white\">Login</a></button>\r\n                            </form>\r\n                            <p className=\"text-right\">\r\n                                <Link to=\"/register\" className=\"\" value=\"register\">New Account?REGISTER</Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;\r\n","import React,{ Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Email extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"login\">\r\n                        <div className=\"title-bar\">\r\n                            <p>Login</p>\r\n                        </div>\r\n                        <div className=\"form-content\">\r\n                            <p className=\"text-right\"><Link to=\"/login\" className=\"\" value=\"register\">Login with Phone</Link></p>\r\n                            <form className=\"form\">\r\n                                <input type=\"text\" name=\"\" placeholder=\"Email\" required=\"\"/>\r\n                                <input type=\"password\" name=\"\" placeholder=\"Password\" required=\"\"/>\r\n                                <button className=\"btn-com\"><a href=\"register\"\r\n                                                               className=\"cl-white\">Login</a></button>\r\n                            </form>\r\n                            <p className=\"text-right\">\r\n                                <Link to=\"/register\" className=\"\" value=\"register\">New Account?REGISTER</Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Email;\r\n","import React,{ Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { FaLongArrowAltLeft,FaMinus,FaPlus } from 'react-icons/fa';\r\nclass Register extends Component{\r\n    render() {\r\n        return(\r\n\r\n            <div className=\"wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"login\">\r\n                        <div className=\"title-bar\">\r\n                            <p><Link to=\"/login\" className=\"cl-white icon\" value=\"login\"><FaLongArrowAltLeft/></Link>Register</p>\r\n                        </div>\r\n                        <div className=\"form-content\">\r\n                            <p className=\"text-right\">\r\n                                <Link to=\"/login\" value=\"register\">Already have TMD-Account ?</Link>\r\n                            </p>\r\n                            <form className=\"form\">\r\n                                <input type=\"text\" name=\"\" placeholder=\"Email\" required=\"\"/>\r\n                                <input type=\"name\" name=\"\" placeholder=\"Your Name\" required=\"\"/>\r\n                                <input type=\"phone\" name=\"\" placeholder=\"Phone No\" required=\"\"/>\r\n                                <input type=\"email\" name=\"\" placeholder=\"Your Email\" required=\"\"/>\r\n                                <input type=\"password\" name=\"\" placeholder=\"Password\" required=\"\"/>\r\n                                <input type=\"confirm\" name=\"\" placeholder=\"Confirm Password\" required=\"\"/>\r\n                                <div>\r\n                                    <div className=\"custom-control custom-radio\">\r\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"defaultUnchecked\"\r\n                                               name=\"defaultExampleRadios\"/>\r\n                                        <label className=\"custom-control-label\"\r\n                                               htmlFor=\"defaultUnchecked\">Clinic</label>\r\n                                    </div>\r\n                                    <div className=\"custom-control custom-radio\">\r\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"defaultChecked\"\r\n                                               name=\"defaultExampleRadios\" checked/>\r\n                                        <label className=\"custom-control-label\"\r\n                                               htmlFor=\"defaultChecked\">Drug-store</label>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"drug\" name=\"\" placeholder=\"Clinic or Drug-store Name\" required=\"\"/>\r\n                                <input type=\"address\" name=\"\" placeholder=\"Clinic or Drug-store Address\" required=\"\"/>\r\n                                <div className=\"box\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"mapBox\"/>\r\n                                        <label className=\"custom-control-label\" htmlFor=\"mapBox\">I'm at my clinic/drug-store</label>\r\n                                    </div>\r\n                                    <p className=\"text\"><Link to=\"/register\" className=\"\" value=\"register\">Mark my company on Google Map</Link></p>\r\n                                </div>\r\n                                <div className=\"box\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"termBox\"/>\r\n                                        <label className=\"custom-control-label\" htmlFor=\"termBox\">I agree to the Thamardaw Terms & Conditions.</label>\r\n                                    </div>\r\n                                    <p className=\"text\"><Link to=\"/register\" className=\"\" value=\"register\">Read Terms & Conditions</Link></p>\r\n                                </div>\r\n                                <button className=\"btn-com\">\r\n                                    <Link to=\"/login\" className=\"\" value=\"register\">REGISTER</Link>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Register;\r\n","import React,{ Component} from 'react';\r\nimport {\r\n    Route,\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Login from './containers/login';\r\nimport Email from './containers/email';\r\nimport Register from './containers/register';\r\n\r\nclass App extends Component {\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Route exact path=\"/login\" component={Login}/>\r\n                    <Route exact path=\"/\" component={Login}/>\r\n                    <Route exact path=\"/email\" component={Email}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './all.css';\r\nimport './reset.css';\r\nimport './index.css';\r\n\r\n// import 'font-awesome/css/font-awesome.min.css';\r\nimport App from './App';\r\n// import Login from './containers/login';\r\n// import Dashboard  from './containers/dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}